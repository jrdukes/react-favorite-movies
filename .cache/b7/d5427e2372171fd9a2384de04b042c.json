{"id":"../node_modules/routes/dist/routes.js","dependencies":[{"name":"/Users/joedukes/jrs-classwork/react-favorite-movies/package.json","includedInParent":true,"mtime":1562854256900},{"name":"/Users/joedukes/jrs-classwork/react-favorite-movies/node_modules/routes/package.json","includedInParent":true,"mtime":1562854255429}],"generated":{"js":"var define;\nvar global = arguments[3];\n!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.routes=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\nvar localRoutes = [];\n\n\n/**\n * Convert path to route object\n *\n * A string or RegExp should be passed,\n * will return { re, src, keys} obj\n *\n * @param  {String / RegExp} path\n * @return {Object}\n */\n\nvar Route = function(path){\n  //using 'new' is optional\n\n  var src, re, keys = [];\n\n  if(path instanceof RegExp){\n    re = path;\n    src = path.toString();\n  }else{\n    re = pathToRegExp(path, keys);\n    src = path;\n  }\n\n  return {\n  \t re: re,\n  \t src: path.toString(),\n  \t keys: keys\n  }\n};\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String} path\n * @param  {Array} keys\n * @return {RegExp}\n */\nvar pathToRegExp = function (path, keys) {\n\tpath = path\n\t\t.concat('/?')\n\t\t.replace(/\\/\\(/g, '(?:/')\n\t\t.replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?|\\*/g, function(_, slash, format, key, capture, optional){\n\t\t\tif (_ === \"*\"){\n\t\t\t\tkeys.push(undefined);\n\t\t\t\treturn _;\n\t\t\t}\n\n\t\t\tkeys.push(key);\n\t\t\tslash = slash || '';\n\t\t\treturn ''\n\t\t\t\t+ (optional ? '' : slash)\n\t\t\t\t+ '(?:'\n\t\t\t\t+ (optional ? slash : '')\n\t\t\t\t+ (format || '') + (capture || '([^/]+?)') + ')'\n\t\t\t\t+ (optional || '');\n\t\t})\n\t\t.replace(/([\\/.])/g, '\\\\$1')\n\t\t.replace(/\\*/g, '(.*)');\n\treturn new RegExp('^' + path + '$', 'i');\n};\n\n/**\n * Attempt to match the given request to\n * one of the routes. When successful\n * a  {fn, params, splats} obj is returned\n *\n * @param  {Array} routes\n * @param  {String} uri\n * @return {Object}\n */\nvar match = function (routes, uri, startAt) {\n\tvar captures, i = startAt || 0;\n\n\tfor (var len = routes.length; i < len; ++i) {\n\t\tvar route = routes[i],\n\t\t    re = route.re,\n\t\t    keys = route.keys,\n\t\t    splats = [],\n\t\t    params = {};\n\n\t\tif (captures = uri.match(re)) {\n\t\t\tfor (var j = 1, len = captures.length; j < len; ++j) {\n\t\t\t\tvar key = keys[j-1],\n\t\t\t\t\tval = typeof captures[j] === 'string'\n\t\t\t\t\t\t? unescape(captures[j])\n\t\t\t\t\t\t: captures[j];\n\t\t\t\tif (key) {\n\t\t\t\t\tparams[key] = val;\n\t\t\t\t} else {\n\t\t\t\t\tsplats.push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tparams: params,\n\t\t\t\tsplats: splats,\n\t\t\t\troute: route.src,\n\t\t\t\tnext: i + 1\n\t\t\t};\n\t\t}\n\t}\n};\n\n/**\n * Default \"normal\" router constructor.\n * accepts path, fn tuples via addRoute\n * returns {fn, params, splats, route}\n *  via match\n *\n * @return {Object}\n */\n\nvar Router = function(){\n  //using 'new' is optional\n  return {\n    routes: [],\n    routeMap : {},\n    addRoute: function(path, fn){\n      if (!path) throw new Error(' route requires a path');\n      if (!fn) throw new Error(' route ' + path.toString() + ' requires a callback');\n\n      if (this.routeMap[path]) {\n        throw new Error('path is already defined: ' + path);\n      }\n\n      var route = Route(path);\n      route.fn = fn;\n\n      this.routes.push(route);\n      this.routeMap[path] = fn;\n    },\n\n    removeRoute: function(path) {\n      if (!path) throw new Error(' route requires a path');\n      if (!this.routeMap[path]) {\n        throw new Error('path does not exist: ' + path);\n      }\n\n      var match;\n      var newRoutes = [];\n\n      // copy the routes excluding the route being removed\n      for (var i = 0; i < this.routes.length; i++) {\n        var route = this.routes[i];\n        if (route.src !== path) {\n          newRoutes.push(route);\n        }\n      }\n      this.routes = newRoutes;\n      delete this.routeMap[path];\n    },\n\n    match: function(pathname, startAt){\n      var route = match(this.routes, pathname, startAt);\n      if(route){\n        route.fn = this.routeMap[route.route];\n        route.next = this.match.bind(this, pathname, route.next)\n      }\n      return route;\n    }\n  }\n};\n\nRouter.Route = Route\nRouter.pathToRegExp = pathToRegExp\nRouter.match = match\n// back compat\nRouter.Router = Router\n\nmodule.exports = Router\n\n},{}]},{},[1])\n(1)\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/routes/dist/routes.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/routes/dist/routes.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}}],"sources":{"../node_modules/routes/dist/routes.js":"!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.routes=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\nvar localRoutes = [];\n\n\n/**\n * Convert path to route object\n *\n * A string or RegExp should be passed,\n * will return { re, src, keys} obj\n *\n * @param  {String / RegExp} path\n * @return {Object}\n */\n\nvar Route = function(path){\n  //using 'new' is optional\n\n  var src, re, keys = [];\n\n  if(path instanceof RegExp){\n    re = path;\n    src = path.toString();\n  }else{\n    re = pathToRegExp(path, keys);\n    src = path;\n  }\n\n  return {\n  \t re: re,\n  \t src: path.toString(),\n  \t keys: keys\n  }\n};\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String} path\n * @param  {Array} keys\n * @return {RegExp}\n */\nvar pathToRegExp = function (path, keys) {\n\tpath = path\n\t\t.concat('/?')\n\t\t.replace(/\\/\\(/g, '(?:/')\n\t\t.replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?|\\*/g, function(_, slash, format, key, capture, optional){\n\t\t\tif (_ === \"*\"){\n\t\t\t\tkeys.push(undefined);\n\t\t\t\treturn _;\n\t\t\t}\n\n\t\t\tkeys.push(key);\n\t\t\tslash = slash || '';\n\t\t\treturn ''\n\t\t\t\t+ (optional ? '' : slash)\n\t\t\t\t+ '(?:'\n\t\t\t\t+ (optional ? slash : '')\n\t\t\t\t+ (format || '') + (capture || '([^/]+?)') + ')'\n\t\t\t\t+ (optional || '');\n\t\t})\n\t\t.replace(/([\\/.])/g, '\\\\$1')\n\t\t.replace(/\\*/g, '(.*)');\n\treturn new RegExp('^' + path + '$', 'i');\n};\n\n/**\n * Attempt to match the given request to\n * one of the routes. When successful\n * a  {fn, params, splats} obj is returned\n *\n * @param  {Array} routes\n * @param  {String} uri\n * @return {Object}\n */\nvar match = function (routes, uri, startAt) {\n\tvar captures, i = startAt || 0;\n\n\tfor (var len = routes.length; i < len; ++i) {\n\t\tvar route = routes[i],\n\t\t    re = route.re,\n\t\t    keys = route.keys,\n\t\t    splats = [],\n\t\t    params = {};\n\n\t\tif (captures = uri.match(re)) {\n\t\t\tfor (var j = 1, len = captures.length; j < len; ++j) {\n\t\t\t\tvar key = keys[j-1],\n\t\t\t\t\tval = typeof captures[j] === 'string'\n\t\t\t\t\t\t? unescape(captures[j])\n\t\t\t\t\t\t: captures[j];\n\t\t\t\tif (key) {\n\t\t\t\t\tparams[key] = val;\n\t\t\t\t} else {\n\t\t\t\t\tsplats.push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tparams: params,\n\t\t\t\tsplats: splats,\n\t\t\t\troute: route.src,\n\t\t\t\tnext: i + 1\n\t\t\t};\n\t\t}\n\t}\n};\n\n/**\n * Default \"normal\" router constructor.\n * accepts path, fn tuples via addRoute\n * returns {fn, params, splats, route}\n *  via match\n *\n * @return {Object}\n */\n\nvar Router = function(){\n  //using 'new' is optional\n  return {\n    routes: [],\n    routeMap : {},\n    addRoute: function(path, fn){\n      if (!path) throw new Error(' route requires a path');\n      if (!fn) throw new Error(' route ' + path.toString() + ' requires a callback');\n\n      if (this.routeMap[path]) {\n        throw new Error('path is already defined: ' + path);\n      }\n\n      var route = Route(path);\n      route.fn = fn;\n\n      this.routes.push(route);\n      this.routeMap[path] = fn;\n    },\n\n    removeRoute: function(path) {\n      if (!path) throw new Error(' route requires a path');\n      if (!this.routeMap[path]) {\n        throw new Error('path does not exist: ' + path);\n      }\n\n      var match;\n      var newRoutes = [];\n\n      // copy the routes excluding the route being removed\n      for (var i = 0; i < this.routes.length; i++) {\n        var route = this.routes[i];\n        if (route.src !== path) {\n          newRoutes.push(route);\n        }\n      }\n      this.routes = newRoutes;\n      delete this.routeMap[path];\n    },\n\n    match: function(pathname, startAt){\n      var route = match(this.routes, pathname, startAt);\n      if(route){\n        route.fn = this.routeMap[route.route];\n        route.next = this.match.bind(this, pathname, route.next)\n      }\n      return route;\n    }\n  }\n};\n\nRouter.Route = Route\nRouter.pathToRegExp = pathToRegExp\nRouter.match = match\n// back compat\nRouter.Router = Router\n\nmodule.exports = Router\n\n},{}]},{},[1])\n(1)\n});"},"lineCount":186}},"error":null,"hash":"ac518de6bfa37ce4b5aefbc592f06df5","cacheData":{"env":{}}}